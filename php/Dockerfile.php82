FROM php:8.2.6-fpm

# Establecer el directorio de trabajo
WORKDIR /var/www

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    supervisor \
    nginx \
    libicu-dev \
    libsodium-dev \
    zlib1g-dev \
    libzip-dev

# Instalar Node.js y npm
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get install -y nodejs

# Limpiar la caché
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Agregar configuración de memory_limit al php.ini
COPY php82.ini /usr/local/etc/php/conf.d/custom-php.ini

# Instalar extensiones de PHP
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd intl mysqli sodium zip pcntl

# Instalar Xdebug
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

# Configuración de Xdebug (ajusta las configuraciones según sea necesario)
COPY php82.xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

# Instalar Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

ARG USER_SO_ID
ARG USER_SO_GID
ARG USER_SO_NAME

RUN groupadd -g ${USER_SO_GID} ${USER_SO_NAME} && \
    useradd -m -u ${USER_SO_ID} -g ${USER_SO_GID} ${USER_SO_NAME}

# Establecer la propiedad y los permisos adecuados para el directorio /var/www
RUN chown -R $USER_SO_NAME:$USER_SO_NAME /var/www && chmod -R 755 /var/www

# Copiar el directorio de la aplicación existente
COPY --chown=$USER_SO_NAME:$USER_SO_NAME . /var/www

USER $USER_SO_NAME

EXPOSE 9000
